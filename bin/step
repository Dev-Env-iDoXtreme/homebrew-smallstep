#! /bin/sh
#/
#/ usage: ./step <url> <version>
#/
#/ positional arguments:
#/   url        internet address from which to download step tarball
#/   version    version that will appear when users run `step version`
#/
#/ examples:
#/   - ./step https://github.com/smallstep/cli/archive/v0.0.1.tar.gz v0.0.1
#/   - ./step https://github.com/smallstep/cli/archive/v5.4.3.tar.gz v0.1.2
#/

set -e

usage() {
    cat "$0" | grep '^#/' | cut -c 4-
    exit $1
}

if [ $# -ne 2 ]; then
    echo "Not enough positional arguments"
    usage 1
fi

URL="${1}"
VERSION="${2}"

DIR="$( cd "$(dirname "$(dirname "$0")")" ; pwd -P )"

cd "$(mktemp -d)"
TMP="$(PWD)"
trap "rm -rf \"${TMP}\"" EXIT INT QUIT TERM

fname="step-cli-tarball"
curl -O -J -L -s "${URL}"
SHA="$(shasum -a 256 "$(ls . | tr -d "\r\n")" | awk '{printf $1}')"

cat > "${DIR}/step.rb" <<EOF
# DO NOT EDIT THIS FILE DIRECTLY
# UNLESS YOU KNOW WHAT YOU ARE DOING
#
# Instead use ./bin/step to update this file for new releases.

class Step < Formula
  desc "Crypto and x509 Swiss-Army-Knife"
  homepage "https://github.com/smallstep/cli"
  url "${URL}"
  sha256 "${SHA}"

  depends_on "dep" => :build
  depends_on "go" => :build

  def install
    ENV["GOPATH"] = buildpath
    (buildpath/"src/github.com/smallstep/cli").install buildpath.children
    cd  "src/github.com/smallstep/cli" do
      system "env", "VERSION=${VERSION}", "make", "build"
      bin.install "bin/step" => "step"
      bash_completion.install "autocomplete/bash_autocomplete" => "step"
    end
  end

  test do
    system "#{bin}/step", "crypto", "keypair", "foo.pub", "foo.priv", "--no-password", "--insecure"
  end
end
EOF
